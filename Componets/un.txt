import React, { useState, useRef } from 'react';
import { Button, StyleSheet, Text, View, Animated, TouchableOpacity, Modal, Dimensions } from 'react-native';
import D1 from './D1';

const SCREEN_WIDTH = Dimensions.get('window').width;

const T3 = () => {
    const [visible, setVisible] = useState(false);
    const [modalVisible, setModalVisible] = useState(false);
    const translateX = useRef(new Animated.Value(-SCREEN_WIDTH)).current;

    const openSidebar = () => {
        setVisible(true);
        Animated.timing(translateX, {
            toValue: 0, 
            duration: 300,
            useNativeDriver: true,
        }).start();
    };

    const closeSidebar = () => {
        Animated.timing(translateX, {
            toValue: -SCREEN_WIDTH, 
            duration: 300,
            useNativeDriver: true,
        }).start(() => setVisible(false));
    };

    const openD1 = () => {
        closeSidebar();
        setTimeout(() => {
            setModalVisible(true);
        }, 300);
    };

    return (
        <View style={styles.container}>
            <Text>T3</Text>
            <Button title="Toggle Sidebar" onPress={openSidebar} />

            {visible && <TouchableOpacity style={styles.overlay} onPress={closeSidebar} />}

            <Animated.View style={[styles.sidebar, { transform: [{ translateX }] }]}>
                <Button title="D1" onPress={openD1} />
            </Animated.View>

            <Modal visible={modalVisible} animationType="slide">
                <D1 onClose={() => setModalVisible(false)} />
            </Modal>
        </View>
    );
};

export default T3;

const styles = StyleSheet.create({
    container: { flex: 1, justifyContent: 'center', alignItems: 'center' },
    overlay: {
        position: 'absolute',
        width: '100%',
        height: '100%',
        backgroundColor: 'rgba(0,0,0,0.5)'
    },
    sidebar: {
        position: 'absolute',
        left: 0,
        top: 0,
        height: '100%', // Full height
        width: 200, // Adjust width as needed
        backgroundColor: 'white',
        padding: 20,
        shadowColor: '#000',
        shadowOffset: { width: 2, height: 0 },
        shadowOpacity: 0.2,
        shadowRadius: 8,
    },
});
